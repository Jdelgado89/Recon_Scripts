import os
import glob

directory = "/mnt/data/"
file_pattern = "creds_for_10.*"

files = glob.glob(os.path.join(directory, file_pattern))

for input_file in files:
    base_name = os.path.basename(input_file)
    ip_part = base_name.replace("creds_for_", "")

    shadow_file = os.path.join(directory, f"shadow_output_{ip_part}.txt")
    passwd_file = os.path.join(directory, f"passwd_output_{ip_part}.txt")

    with open(input_file, "r") as f:
        lines = f.readlines()

    shadow_data = []
    passwd_data = []
    current_section = None

    for line in lines:
        line = line.strip()

        # Detect the beginning of /etc/passwd
        if line.startswith("root:") and len(line.split(":")) > 2:
            current_section = "passwd"

        # Detect the beginning of /etc/shadow
        elif line.startswith("root:!") or line.startswith("root:*") or line.startswith("$6$"):
            current_section = "shadow"

        # Stop collecting when another command output appears
        elif "ESTAB" in line or "ps -aux" in line or "COMMAND" in line:
            current_section = None

        # Store data in the correct section
        if current_section == "passwd":
            passwd_data.append(line)
        elif current_section == "shadow":
            shadow_data.append(line)

    # Write extracted data to separate files
    if passwd_data:
        with open(passwd_file, "w") as f:
            f.write("\n".join(passwd_data))
        print(f"Extracted passwd data -> {passwd_file}")

    if shadow_data:
        with open(shadow_file, "w") as f:
            f.write("\n".join(shadow_data))
        print(f"Extracted shadow data -> {shadow_file}")
